import{l as e,f as r,A as a}from"./framework.ab59a038.js";const l='{"title":"21F06","description":"","frontmatter":{"title":"21F06","subtitle":"vanilla javascript","category":"javascript","date":"2021-03-17T00:00:00.000Z"},"headers":[{"level":2,"title":"FileReader","slug":"filereader"}],"relativePath":"daily/21F06.md","lastUpdated":1615964418440}',t={},d=a('<p><div class="table-of-contents"><ul><li><a href="#filereader">FileReader</a></li></ul></div></p><hr><h2 id="filereader"><a class="header-anchor" href="#filereader" aria-hidden="true">#</a> FileReader</h2><p>用于从 input 的文件上传组件中读取文件内容。正常情况下我们可以按照如下的方式使用：</p><div class="language-"><pre><code>function readfile(file) {\n    const reader = new FileReader()\n   \n    reader.onload = e =&gt; {\n        console.log(e.target.result);\n    };\n    \n    reader.readAsText(file);\n}\n</code></pre></div><p>我们需要注意，onload 是一个异步回调函数，当文件被读取完毕后，会触发这个回调函数。读取的内容保存在 <code>reader.result</code> 中。</p><ul><li>[<a href="https://developer.mozilla.org/en-US/docs/Web/API/FileReader" target="_blank" rel="noopener noreferrer">Web API - FileReader</a>]</li></ul>',7);t.render=function(a,l,t,i,n,o){return e(),r("div",null,[d])};export default t;export{l as __pageData};
