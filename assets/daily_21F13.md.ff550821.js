import{l as e,f as r,A as t}from"./framework.ab59a038.js";const a='{"title":"21F13","description":"","frontmatter":{"title":"21F13","subtitle":"Git Tricky","category":"git","date":"2021-03-24T00:00:00.000Z"},"headers":[{"level":2,"title":"filter-branch","slug":"filter-branch"},{"level":2,"title":"sparse-checkout","slug":"sparse-checkout"},{"level":2,"title":"git clone --filter --sparse","slug":"git-clone-filter-sparse"}],"relativePath":"daily/21F13.md","lastUpdated":1616572215106}',i={},l=t('<p><div class="table-of-contents"><ul><li><a href="#filter-branch">filter-branch</a></li><li><a href="#sparse-checkout">sparse-checkout</a></li><li><a href="#git-clone-filter-sparse">git clone --filter --sparse</a></li></ul></div></p><hr><p>本笔记记录一些不太常用的 git 命令，这些命令在某些场景下会有一些帮助。这些场景一般会有对应的 git 命令帮助解决。</p><h2 id="filter-branch"><a class="header-anchor" href="#filter-branch" aria-hidden="true">#</a> filter-branch</h2><p><strong>这是一个比较危险的操作，在使用前需要三思。这个子命令用来修改分支上的提交历史的。</strong></p><p>假设有这样的场景：当误提交了一些敏感信息，比如用户名和密码等等。我们需要在所有的分支和提交中将该信息删除干净，可以使用 <code>filter-branch</code> 完成这个任务。</p><div class="language-"><pre><code>$ git filter-branch --tree-filter &#39;rm -f filename&#39; HEAD\n</code></pre></div><p>这将会从所有的提交历史中删掉 filename。</p><p>而一般更加常见的方式是：</p><div class="language-"><pre><code>git filter-branch --force --index-filter \\\n  &quot;git rm --cached --ignore-unmatch PATH-TO-YOUR-FILE-WITH-SENSITIVE-DATA&quot; \\\n  --prune-empty --tag-name-filter cat -- --all\n</code></pre></div><p>完整的操作参考: [<a href="https://docs.github.com/cn/github/authenticating-to-github/removing-sensitive-data-from-a-repository" target="_blank" rel="noopener noreferrer">Github Docs</a>]。</p><p>其他可以参考的资料：</p><ul><li>[<a href="https://git-scm.com/docs/git-filter-branch" target="_blank" rel="noopener noreferrer">Git Docs</a>]</li></ul><p><strong>一个更加安全的做法是：</strong></p><ul><li>[<a href="https://github.com/newren/git-filter-repo/" target="_blank" rel="noopener noreferrer">git-filter-repo</a>]</li></ul><h2 id="sparse-checkout"><a class="header-anchor" href="#sparse-checkout" aria-hidden="true">#</a> sparse-checkout</h2><h2 id="git-clone-filter-sparse"><a class="header-anchor" href="#git-clone-filter-sparse" aria-hidden="true">#</a> git clone --filter --sparse</h2><p>参考: [<a href="https://github.blog/2020-01-17-bring-your-monorepo-down-to-size-with-sparse-checkout/" target="_blank" rel="noopener noreferrer">Github Blog Post</a>]</p>',18);i.render=function(t,a,i,o,n,s){return e(),r("div",null,[l])};export default i;export{a as __pageData};
