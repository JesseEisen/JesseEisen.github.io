import{_ as s}from"./Code.65580723.js";import{_ as a}from"./app.ee4e96c4.js";import{h as n,o as e,a as t,w as o,b as l,k as c}from"./vendor.5a394a79.js";const p=l("p",null,"日常编写 bash 脚本处理 json 时，我们大概率会使用 jq 这个工具，此时我们需要学习一些 jq 的语法，下面总结一些使用过程中遇到的一些问题和解决方式。",-1),r=l("h3",{id:"使用-bash-变量"},[l("a",{class:"header-anchor",href:"#使用-bash-变量","aria-hidden":"true"},"#"),c(" 使用 bash 变量")],-1),i=l("pre",{class:"language-bash"},[l("code",{class:"language-bash"},[c("$ "),l("span",{class:"token assign-left variable"},"var1"),l("span",{class:"token operator"},"="),l("span",{class:"token string"},'"hello"'),c("\n$ jq --arg var1 "),l("span",{class:"token variable"},"$var1"),c(),l("span",{class:"token string"},[c("'.res["),l("span",{class:"token variable"},"$var1"),c("]'")]),c(" filename.json\n")])],-1),u=l("p",null,[c("可以多次使用 "),l("code",null,"--arg inner_var bash_var"),c(" 的方式。")],-1),k=l("h3",{id:"检查-key-是否存在"},[l("a",{class:"header-anchor",href:"#检查-key-是否存在","aria-hidden":"true"},"#"),c(" 检查 key 是否存在")],-1),h=l("pre",{class:"language-bash"},[l("code",{class:"language-bash"},[c("$ jq -r "),l("span",{class:"token string"},"'.result | has(\"keyname\")'"),c(" filename.json\n"),l("span",{class:"token boolean"},"true"),c("  "),l("span",{class:"token comment"},"# or false"),c("\n")])],-1),d=l("h3",{id:"检查字段是否存在某些字段"},[l("a",{class:"header-anchor",href:"#检查字段是否存在某些字段","aria-hidden":"true"},"#"),c(" 检查字段是否存在某些字段")],-1),b=l("pre",{class:"language-bash"},[l("code",{class:"language-bash"},[c("$ jq -r "),l("span",{class:"token string"},"'.result.var | contains(\"content\")'"),c(" filename.json\n"),l("span",{class:"token boolean"},"true"),c(),l("span",{class:"token comment"},"# or false"),c("\n")])],-1),g=l("h3",{id:"获取-object-的-key-或者-value"},[l("a",{class:"header-anchor",href:"#获取-object-的-key-或者-value","aria-hidden":"true"},"#"),c(" 获取 object 的 key 或者 value")],-1),j=l("p",null,"比如有如下的 json :",-1),y=l("pre",{class:"language-json"},[l("code",{class:"language-json"},[l("span",{class:"token punctuation"},"{"),c("\n  "),l("span",{class:"token property"},'"key1"'),l("span",{class:"token operator"},":"),c(),l("span",{class:"token punctuation"},"{"),c("\n    "),l("span",{class:"token property"},'"key11"'),l("span",{class:"token operator"},":"),c(),l("span",{class:"token punctuation"},"{"),c("\n      "),l("span",{class:"token property"},'"key111"'),l("span",{class:"token operator"},":"),c(),l("span",{class:"token punctuation"},"{"),c("\n        "),l("span",{class:"token property"},'"key1111"'),l("span",{class:"token operator"},":"),c(),l("span",{class:"token string"},'"hello"'),c("\n      "),l("span",{class:"token punctuation"},"}"),c("\n    "),l("span",{class:"token punctuation"},"}"),c("\n  "),l("span",{class:"token punctuation"},"}"),l("span",{class:"token punctuation"},","),c("\n  "),l("span",{class:"token property"},'"key2"'),l("span",{class:"token operator"},":"),c(),l("span",{class:"token punctuation"},"{"),c("\n    "),l("span",{class:"token property"},'"key22"'),l("span",{class:"token operator"},":"),c(),l("span",{class:"token punctuation"},"{"),c("\n      "),l("span",{class:"token property"},'"key222"'),l("span",{class:"token operator"},":"),c(),l("span",{class:"token punctuation"},"{"),c("\n        "),l("span",{class:"token property"},'"key2222"'),l("span",{class:"token operator"},":"),c(),l("span",{class:"token string"},'"world"'),c("\n      "),l("span",{class:"token punctuation"},"}"),c("\n    "),l("span",{class:"token punctuation"},"}"),c("\n  "),l("span",{class:"token punctuation"},"}"),c("\n"),l("span",{class:"token punctuation"},"}"),c("\n")])],-1),m=l("p",null,[c("若只想输入两个 value 的值，"),l("code",null,"hello"),c(" 和 "),l("code",null,"world"),c("。 可以用的方式是：")],-1),v=l("pre",{class:"language-bash"},[l("code",{class:"language-bash"},[c("$ jq -r "),l("span",{class:"token string"},"'.[] | .[] | .[] | to_entries | .[].value'"),c(" xxx.json\nhello\nworld\n")])],-1),f=l("p",null,[c("注意这边的 "),l("code",null,"to_entries"),c(" 是将内容转变成固定格式：")],-1),q=l("pre",{class:"language-bash"},[l("code",{class:"language-bash"},[l("span",{class:"token punctuation"},"["),c("\n  "),l("span",{class:"token punctuation"},"{"),c("\n    "),l("span",{class:"token string"},'"key"'),l("span",{class:"token builtin class-name"},":"),c(),l("span",{class:"token string"},'"key111"'),c(",\n    "),l("span",{class:"token string"},'"value"'),l("span",{class:"token builtin class-name"},":"),c(),l("span",{class:"token punctuation"},"{"),c("\n      "),l("span",{class:"token string"},'"key1111"'),l("span",{class:"token builtin class-name"},":"),c(),l("span",{class:"token string"},'"hello"'),c("\n    "),l("span",{class:"token punctuation"},"}"),c("\n  "),l("span",{class:"token punctuation"},"}"),c("\n"),l("span",{class:"token punctuation"},"]"),c("\n"),l("span",{class:"token punctuation"},"["),c("\n  "),l("span",{class:"token punctuation"},"{"),c("\n    "),l("span",{class:"token string"},'"key"'),l("span",{class:"token builtin class-name"},":"),c(),l("span",{class:"token string"},'"key222"'),c(",\n    "),l("span",{class:"token string"},'"value"'),l("span",{class:"token builtin class-name"},":"),c(),l("span",{class:"token punctuation"},"{"),c("\n      "),l("span",{class:"token string"},'"key2222"'),l("span",{class:"token builtin class-name"},":"),c(),l("span",{class:"token string"},'"world"'),c("\n    "),l("span",{class:"token punctuation"},"}"),c("\n  "),l("span",{class:"token punctuation"},"}"),c("\n"),l("span",{class:"token punctuation"},"]"),c("\n")])],-1),w=l("p",null,"之后再统一取指定的 key 下面的内容。",-1),x=l("h3",{id:"jq-读取-array-内容到-bash-变量"},[l("a",{class:"header-anchor",href:"#jq-读取-array-内容到-bash-变量","aria-hidden":"true"},"#"),c(" jq 读取 array 内容到 bash 变量")],-1),$=l("p",null,"我们经常需要将 json 的数组内容读取到 bash 的数组中。可以有两种方式，主要看 bash 的版本：",-1),_=c("bash 4+"),I=l("pre",{class:"language-bash"},[l("code",{class:"language-bash"},[c("$ "),l("span",{class:"token builtin class-name"},"mapfile"),c(" -t arr "),l("span",{class:"token operator"},"<"),c(),l("span",{class:"token operator"},"<"),l("span",{class:"token punctuation"},"("),c("jq -r "),l("span",{class:"token string"},"'keys[]'"),c(" xxx.json"),l("span",{class:"token punctuation"},")"),c("\n")])],-1),S=c("older bash"),T=l("pre",{class:"language-bash"},[l("code",{class:"language-bash"},[l("span",{class:"token assign-left variable"},"arr"),l("span",{class:"token operator"},"="),l("span",{class:"token punctuation"},"("),l("span",{class:"token punctuation"},")"),c("\n"),l("span",{class:"token keyword"},"while"),c(),l("span",{class:"token assign-left variable"},[l("span",{class:"token environment constant"},"IFS")]),l("span",{class:"token operator"},"="),l("span",{class:"token string"},"''"),c(),l("span",{class:"token builtin class-name"},"read"),c(" -r line"),l("span",{class:"token punctuation"},";"),c(),l("span",{class:"token keyword"},"do"),c("\n   "),l("span",{class:"token assign-left variable"},"arr"),l("span",{class:"token operator"},"+="),l("span",{class:"token punctuation"},"("),l("span",{class:"token string"},[c('"'),l("span",{class:"token variable"},"$line"),c('"')]),l("span",{class:"token punctuation"},")"),c("\n"),l("span",{class:"token keyword"},"done"),c(),l("span",{class:"token operator"},"<"),c(),l("span",{class:"token operator"},"<"),l("span",{class:"token punctuation"},"("),c("jq "),l("span",{class:"token string"},"'keys[]'"),c(" xxx.json"),l("span",{class:"token punctuation"},")"),c("\n")])],-1),F=l("p",null,"此外还有一种方式用于纯 json 数组的转换，比如：",-1),J=l("pre",{class:"language-bash"},[l("code",{class:"language-bash"},[l("span",{class:"token comment"},"#["),c("\n"),l("span",{class:"token comment"},"#    1, 2, 3, 4, 5, 6, 7, 8, 9"),c("\n"),l("span",{class:"token comment"},"#]"),c("\n\n$ "),l("span",{class:"token assign-left variable"},"arr"),l("span",{class:"token operator"},"="),l("span",{class:"token punctuation"},"("),l("span",{class:"token variable"},[l("span",{class:"token variable"},"$("),c("jq -r "),l("span",{class:"token string"},"'. | @sh'"),c(" xxx.json"),l("span",{class:"token variable"},")")]),l("span",{class:"token punctuation"},")"),c("\n")])],-1),C=l("blockquote",null,[l("p",null,"@sh: The input is escaped suitable for use in a command-line for a POSIX shell. If the input is an array, the output will be a series of space-separated strings.")],-1),E=l("h3",{id:"jq-输出多字段内容读取到-bash-变量中"},[l("a",{class:"header-anchor",href:"#jq-输出多字段内容读取到-bash-变量中","aria-hidden":"true"},"#"),c(" jq 输出多字段内容读取到 bash 变量中")],-1),L=l("p",null,"当我们同时需要读取两个并列的 json 字段的内容到脚本中同时处理时，这个过程稍微有点复杂。",-1),O=l("pre",{class:"language-bash"},[l("code",{class:"language-bash"},[c(" jq -r "),l("span",{class:"token string"},"'. | [.name,.value] | @tsv'"),c(" model_info.json "),l("span",{class:"token operator"},"|"),c(),l("span",{class:"token punctuation"},"\\"),c("\n        "),l("span",{class:"token keyword"},"while"),c(),l("span",{class:"token assign-left variable"},[l("span",{class:"token environment constant"},"IFS")]),l("span",{class:"token operator"},"="),c("$"),l("span",{class:"token string"},[c("'"),l("span",{class:"token entity",title:"\\t"},"\\t"),c("'")]),c(),l("span",{class:"token builtin class-name"},"read"),c(" -r name ctx"),l("span",{class:"token punctuation"},";"),c(),l("span",{class:"token keyword"},"do"),c("\n           "),l("span",{class:"token builtin class-name"},"echo"),c(),l("span",{class:"token variable"},"$name"),c(", "),l("span",{class:"token variable"},"$ctx"),c("\n        "),l("span",{class:"token keyword"},"done"),c("\n\n")])],-1),P=l("blockquote",null,[l("p",null,"@tsv: The input must be an array, and it is rendered as TSV (tab-separated values). Each input array will be printed as a single line. Fields are separated by a single tab (ascii 0x09). Input characters line-feed (ascii 0x0a), carriage-return (ascii 0x0d), tab (ascii 0x09) and backslash (ascii 0x5c) will be output as escape sequences \\n, \\r, \\t, \\ respectively.")],-1),V=l("p",null,"总体的思路就是先转成 tsv 格式，后续在 read 指定分隔符读取。",-1),X=l("h3",{id:"join-指定字段内容"},[l("a",{class:"header-anchor",href:"#join-指定字段内容","aria-hidden":"true"},"#"),c(" join 指定字段内容")],-1),Z=l("p",null,[c("join 是使用指定分隔符去合并相应的数组内容，比如有数组： "),l("code",null,"[1,2,3,4,5]")],-1),z=l("pre",{class:"language-bash"},[l("code",{class:"language-bash"},[c("$ jq -r "),l("span",{class:"token string"},"'.|join(\"|\")'"),c(" arr.json\n"),l("span",{class:"token number"},"1"),l("span",{class:"token operator"},"|"),l("span",{class:"token number"},"2"),l("span",{class:"token operator"},"|"),l("span",{class:"token number"},"3"),l("span",{class:"token operator"},"|"),l("span",{class:"token number"},"4"),l("span",{class:"token operator"},"|"),l("span",{class:"token number"},"5"),c("\n")])],-1),A={expose:[],setup(c){const A={title:"jq in action",date:"2022-05-11T00:00:00.000Z",author:"Linkang Chan",twitter:"JessEisen_LJ",description:"jq use with bash",public:!0,tag:"22J05 jq",meta:[{property:"og:title",content:"jq in action"},{property:"og:description",content:"jq use with bash"},{name:"description",content:"jq use with bash"}]};return n({title:"jq in action",meta:[{property:"og:title",content:"jq in action"},{property:"og:description",content:"jq use with bash"},{name:"description",content:"jq use with bash"}]}),(n,c)=>{const B=s,D=a;return e(),t(D,{frontmatter:A},{default:o((()=>[l("div",null,[p,r,i,u,k,h,d,b,g,j,y,m,v,f,q,w,x,$,l("ul",null,[l("li",null,[l(B,{op:""},{default:o((()=>[_])),_:1})])]),I,l("ul",null,[l("li",null,[l(B,{op:""},{default:o((()=>[S])),_:1})])]),T,F,J,C,E,L,O,P,V,X,Z,z])])),_:1})}}};export default A;
