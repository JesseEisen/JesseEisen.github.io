import{_ as s}from"./Code.fee8bdde.js";import{_ as a}from"./app.252c1e4c.js";import{h as n,o as e,a as t,w as l,b as o,k as c}from"./vendor.80607e96.js";const p=o("p",null,[o("div",{class:"table-of-contents"},[o("ul",null,[o("li",null,[o("a",{href:"#使用-bash-变量"}," 使用 bash 变量")]),o("li",null,[o("a",{href:"#检查-key-是否存在"}," 检查 key 是否存在")]),o("li",null,[o("a",{href:"#检查字段是否存在某些字段"}," 检查字段是否存在某些字段")]),o("li",null,[o("a",{href:"#获取-object-的-key-或者-value"}," 获取 object 的 key 或者 value")]),o("li",null,[o("a",{href:"#jq-读取-array-内容到-bash-变量"}," jq 读取 array 内容到 bash 变量")]),o("li",null,[o("a",{href:"#jq-输出多字段内容读取到-bash-变量中"}," jq 输出多字段内容读取到 bash 变量中")]),o("li",null,[o("a",{href:"#join-指定字段内容"}," join 指定字段内容")]),o("li",null,[o("a",{href:"#create-json-from-associative-array"}," create JSON from associative array")]),o("li",null,[o("a",{href:"#slurp"}," slurp")]),o("li",null,[o("a",{href:"#reduce"}," reduce")])])])],-1),r=o("p",null,"日常编写 bash 脚本处理 json 时，我们大概率会使用 jq 这个工具，此时我们需要学习一些 jq 的语法，下面总结一些使用过程中遇到的一些问题和解决方式。",-1),i=o("h3",{id:"使用-bash-变量"},[o("a",{class:"header-anchor",href:"#使用-bash-变量","aria-hidden":"true"},"#"),c(" 使用 bash 变量")],-1),u=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ "),o("span",{class:"token assign-left variable"},"var1"),o("span",{class:"token operator"},"="),o("span",{class:"token string"},'"hello"'),c("\n$ jq --arg var1 "),o("span",{class:"token variable"},"$var1"),c(),o("span",{class:"token string"},[c("'.res["),o("span",{class:"token variable"},"$var1"),c("]'")]),c(" filename.json\n")])],-1),k=o("p",null,[c("可以多次使用 "),o("code",null,"--arg inner_var bash_var"),c(" 的方式。")],-1),b=o("h3",{id:"检查-key-是否存在"},[o("a",{class:"header-anchor",href:"#检查-key-是否存在","aria-hidden":"true"},"#"),c(" 检查 key 是否存在")],-1),h=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ jq -r "),o("span",{class:"token string"},"'.result | has(\"keyname\")'"),c(" filename.json\n"),o("span",{class:"token boolean"},"true"),c("  "),o("span",{class:"token comment"},"# or false"),c("\n")])],-1),d=o("h3",{id:"检查字段是否存在某些字段"},[o("a",{class:"header-anchor",href:"#检查字段是否存在某些字段","aria-hidden":"true"},"#"),c(" 检查字段是否存在某些字段")],-1),g=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ jq -r "),o("span",{class:"token string"},"'.result.var | contains(\"content\")'"),c(" filename.json\n"),o("span",{class:"token boolean"},"true"),c(),o("span",{class:"token comment"},"# or false"),c("\n")])],-1),m=o("h3",{id:"获取-object-的-key-或者-value"},[o("a",{class:"header-anchor",href:"#获取-object-的-key-或者-value","aria-hidden":"true"},"#"),c(" 获取 object 的 key 或者 value")],-1),v=o("p",null,"比如有如下的 json :",-1),j=o("pre",{class:"language-json"},[o("code",{class:"language-json"},[o("span",{class:"token punctuation"},"{"),c("\n  "),o("span",{class:"token property"},'"key1"'),o("span",{class:"token operator"},":"),c(),o("span",{class:"token punctuation"},"{"),c("\n    "),o("span",{class:"token property"},'"key11"'),o("span",{class:"token operator"},":"),c(),o("span",{class:"token punctuation"},"{"),c("\n      "),o("span",{class:"token property"},'"key111"'),o("span",{class:"token operator"},":"),c(),o("span",{class:"token punctuation"},"{"),c("\n        "),o("span",{class:"token property"},'"key1111"'),o("span",{class:"token operator"},":"),c(),o("span",{class:"token string"},'"hello"'),c("\n      "),o("span",{class:"token punctuation"},"}"),c("\n    "),o("span",{class:"token punctuation"},"}"),c("\n  "),o("span",{class:"token punctuation"},"}"),o("span",{class:"token punctuation"},","),c("\n  "),o("span",{class:"token property"},'"key2"'),o("span",{class:"token operator"},":"),c(),o("span",{class:"token punctuation"},"{"),c("\n    "),o("span",{class:"token property"},'"key22"'),o("span",{class:"token operator"},":"),c(),o("span",{class:"token punctuation"},"{"),c("\n      "),o("span",{class:"token property"},'"key222"'),o("span",{class:"token operator"},":"),c(),o("span",{class:"token punctuation"},"{"),c("\n        "),o("span",{class:"token property"},'"key2222"'),o("span",{class:"token operator"},":"),c(),o("span",{class:"token string"},'"world"'),c("\n      "),o("span",{class:"token punctuation"},"}"),c("\n    "),o("span",{class:"token punctuation"},"}"),c("\n  "),o("span",{class:"token punctuation"},"}"),c("\n"),o("span",{class:"token punctuation"},"}"),c("\n")])],-1),y=o("p",null,[c("若只想输入两个 value 的值，"),o("code",null,"hello"),c(" 和 "),o("code",null,"world"),c("。 可以用的方式是：")],-1),f=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ jq -r "),o("span",{class:"token string"},"'.[] | .[] | .[] | to_entries | .[].value'"),c(" xxx.json\nhello\nworld\n")])],-1),q=o("p",null,[c("注意这边的 "),o("code",null,"to_entries"),c(" 是将内容转变成固定格式：")],-1),$=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[o("span",{class:"token punctuation"},"["),c("\n  "),o("span",{class:"token punctuation"},"{"),c("\n    "),o("span",{class:"token string"},'"key"'),o("span",{class:"token builtin class-name"},":"),c(),o("span",{class:"token string"},'"key111"'),c(",\n    "),o("span",{class:"token string"},'"value"'),o("span",{class:"token builtin class-name"},":"),c(),o("span",{class:"token punctuation"},"{"),c("\n      "),o("span",{class:"token string"},'"key1111"'),o("span",{class:"token builtin class-name"},":"),c(),o("span",{class:"token string"},'"hello"'),c("\n    "),o("span",{class:"token punctuation"},"}"),c("\n  "),o("span",{class:"token punctuation"},"}"),c("\n"),o("span",{class:"token punctuation"},"]"),c("\n"),o("span",{class:"token punctuation"},"["),c("\n  "),o("span",{class:"token punctuation"},"{"),c("\n    "),o("span",{class:"token string"},'"key"'),o("span",{class:"token builtin class-name"},":"),c(),o("span",{class:"token string"},'"key222"'),c(",\n    "),o("span",{class:"token string"},'"value"'),o("span",{class:"token builtin class-name"},":"),c(),o("span",{class:"token punctuation"},"{"),c("\n      "),o("span",{class:"token string"},'"key2222"'),o("span",{class:"token builtin class-name"},":"),c(),o("span",{class:"token string"},'"world"'),c("\n    "),o("span",{class:"token punctuation"},"}"),c("\n  "),o("span",{class:"token punctuation"},"}"),c("\n"),o("span",{class:"token punctuation"},"]"),c("\n")])],-1),w=o("p",null,"之后再统一取指定的 key 下面的内容。",-1),x=o("h3",{id:"jq-读取-array-内容到-bash-变量"},[o("a",{class:"header-anchor",href:"#jq-读取-array-内容到-bash-变量","aria-hidden":"true"},"#"),c(" jq 读取 array 内容到 bash 变量")],-1),_=o("p",null,"我们经常需要将 json 的数组内容读取到 bash 的数组中。可以有两种方式，主要看 bash 的版本：",-1),S=c("bash 4+"),I=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ "),o("span",{class:"token builtin class-name"},"mapfile"),c(" -t arr "),o("span",{class:"token operator"},"<"),c(),o("span",{class:"token operator"},"<"),o("span",{class:"token punctuation"},"("),c("jq -r "),o("span",{class:"token string"},"'keys[]'"),c(" xxx.json"),o("span",{class:"token punctuation"},")"),c("\n")])],-1),J=c("older bash"),T=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[o("span",{class:"token assign-left variable"},"arr"),o("span",{class:"token operator"},"="),o("span",{class:"token punctuation"},"("),o("span",{class:"token punctuation"},")"),c("\n"),o("span",{class:"token keyword"},"while"),c(),o("span",{class:"token assign-left variable"},[o("span",{class:"token environment constant"},"IFS")]),o("span",{class:"token operator"},"="),o("span",{class:"token string"},"''"),c(),o("span",{class:"token builtin class-name"},"read"),c(" -r line"),o("span",{class:"token punctuation"},";"),c(),o("span",{class:"token keyword"},"do"),c("\n   "),o("span",{class:"token assign-left variable"},"arr"),o("span",{class:"token operator"},"+="),o("span",{class:"token punctuation"},"("),o("span",{class:"token string"},[c('"'),o("span",{class:"token variable"},"$line"),c('"')]),o("span",{class:"token punctuation"},")"),c("\n"),o("span",{class:"token keyword"},"done"),c(),o("span",{class:"token operator"},"<"),c(),o("span",{class:"token operator"},"<"),o("span",{class:"token punctuation"},"("),c("jq "),o("span",{class:"token string"},"'keys[]'"),c(" xxx.json"),o("span",{class:"token punctuation"},")"),c("\n")])],-1),F=o("p",null,"此外还有一种方式用于纯 json 数组的转换，比如：",-1),O=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[o("span",{class:"token comment"},"#["),c("\n"),o("span",{class:"token comment"},"#    1, 2, 3, 4, 5, 6, 7, 8, 9"),c("\n"),o("span",{class:"token comment"},"#]"),c("\n\n$ "),o("span",{class:"token assign-left variable"},"arr"),o("span",{class:"token operator"},"="),o("span",{class:"token punctuation"},"("),o("span",{class:"token variable"},[o("span",{class:"token variable"},"$("),c("jq -r "),o("span",{class:"token string"},"'. | @sh'"),c(" xxx.json"),o("span",{class:"token variable"},")")]),o("span",{class:"token punctuation"},")"),c("\n")])],-1),R=o("blockquote",null,[o("p",null,"@sh: The input is escaped suitable for use in a command-line for a POSIX shell. If the input is an array, the output will be a series of space-separated strings.")],-1),A=o("h3",{id:"jq-输出多字段内容读取到-bash-变量中"},[o("a",{class:"header-anchor",href:"#jq-输出多字段内容读取到-bash-变量中","aria-hidden":"true"},"#"),c(" jq 输出多字段内容读取到 bash 变量中")],-1),C=o("p",null,"当我们同时需要读取两个并列的 json 字段的内容到脚本中同时处理时，这个过程稍微有点复杂。",-1),E=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c(" jq -r "),o("span",{class:"token string"},"'. | [.name,.value] | @tsv'"),c(" model_info.json "),o("span",{class:"token operator"},"|"),c(),o("span",{class:"token punctuation"},"\\"),c("\n        "),o("span",{class:"token keyword"},"while"),c(),o("span",{class:"token assign-left variable"},[o("span",{class:"token environment constant"},"IFS")]),o("span",{class:"token operator"},"="),c("$"),o("span",{class:"token string"},[c("'"),o("span",{class:"token entity",title:"\\t"},"\\t"),c("'")]),c(),o("span",{class:"token builtin class-name"},"read"),c(" -r name ctx"),o("span",{class:"token punctuation"},";"),c(),o("span",{class:"token keyword"},"do"),c("\n           "),o("span",{class:"token builtin class-name"},"echo"),c(),o("span",{class:"token variable"},"$name"),c(", "),o("span",{class:"token variable"},"$ctx"),c("\n        "),o("span",{class:"token keyword"},"done"),c("\n\n")])],-1),L=o("blockquote",null,[o("p",null,"@tsv: The input must be an array, and it is rendered as TSV (tab-separated values). Each input array will be printed as a single line. Fields are separated by a single tab (ascii 0x09). Input characters line-feed (ascii 0x0a), carriage-return (ascii 0x0d), tab (ascii 0x09) and backslash (ascii 0x5c) will be output as escape sequences \\n, \\r, \\t, \\ respectively.")],-1),N=o("p",null,"总体的思路就是先转成 tsv 格式，后续在 read 指定分隔符读取。",-1),z=o("h3",{id:"join-指定字段内容"},[o("a",{class:"header-anchor",href:"#join-指定字段内容","aria-hidden":"true"},"#"),c(" join 指定字段内容")],-1),P=o("p",null,[c("join 是使用指定分隔符去合并相应的数组内容，比如有数组： "),o("code",null,"[1,2,3,4,5]")],-1),V=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ jq -r "),o("span",{class:"token string"},"'.|join(\"|\")'"),c(" arr.json\n"),o("span",{class:"token number"},"1"),o("span",{class:"token operator"},"|"),o("span",{class:"token number"},"2"),o("span",{class:"token operator"},"|"),o("span",{class:"token number"},"3"),o("span",{class:"token operator"},"|"),o("span",{class:"token number"},"4"),o("span",{class:"token operator"},"|"),o("span",{class:"token number"},"5"),c("\n")])],-1),X=o("h3",{id:"create-json-from-associative-array"},[o("a",{class:"header-anchor",href:"#create-json-from-associative-array","aria-hidden":"true"},"#"),c(" create JSON from associative array")],-1),Z=o("p",null,"这种情况下我们可以使用 reduce 进行创建，具体操作如下：",-1),B=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[o("span",{class:"token shebang important"},"#!/bin/bash"),c("\n"),o("span",{class:"token comment"},"# Requires bash with associative arrays"),c("\n"),o("span",{class:"token builtin class-name"},"declare"),c(" -A dict\n\ndict"),o("span",{class:"token punctuation"},"["),o("span",{class:"token string"},'"foo"'),o("span",{class:"token punctuation"},"]"),o("span",{class:"token operator"},"="),o("span",{class:"token number"},"1"),c("\ndict"),o("span",{class:"token punctuation"},"["),o("span",{class:"token string"},'"bar"'),o("span",{class:"token punctuation"},"]"),o("span",{class:"token operator"},"="),o("span",{class:"token number"},"2"),c("\ndict"),o("span",{class:"token punctuation"},"["),o("span",{class:"token string"},'"baz"'),o("span",{class:"token punctuation"},"]"),o("span",{class:"token operator"},"="),o("span",{class:"token number"},"3"),c("\n\n"),o("span",{class:"token keyword"},"for"),c(),o("span",{class:"token for-or-select variable"},"i"),c(),o("span",{class:"token keyword"},"in"),c(),o("span",{class:"token string"},[c('"'),o("span",{class:"token variable"},[c("${"),o("span",{class:"token operator"},"!"),c("dict"),o("span",{class:"token punctuation"},"["),c("@"),o("span",{class:"token punctuation"},"]"),c("}")]),c('"')]),c("\n"),o("span",{class:"token keyword"},"do"),c("\n    "),o("span",{class:"token builtin class-name"},"echo"),c(),o("span",{class:"token string"},[c('"'),o("span",{class:"token variable"},"$i"),c('"')]),c(" \n    "),o("span",{class:"token builtin class-name"},"echo"),c(),o("span",{class:"token string"},[c('"'),o("span",{class:"token variable"},[c("${dict"),o("span",{class:"token punctuation"},"["),c("$i"),o("span",{class:"token punctuation"},"]"),c("}")]),c('"')]),c("\n"),o("span",{class:"token keyword"},"done"),c(),o("span",{class:"token operator"},"|"),c("\njq -n -R "),o("span",{class:"token string"},[c("'reduce inputs as "),o("span",{class:"token variable"},"$i"),c(" ({}; . + { ("),o("span",{class:"token variable"},"$i"),c("): (input|(tonumber? // .)) })'")]),c("\n")])],-1),D=o("p",null,"可以看到 reduce 可以将输入的内容切分成 key 和 value，然后按照 key 创建一个新的 json 对象。这边涉及到几个 jq 的语法：",-1),G=o("ul",null,[o("li",null,[o("code",null,"?"),c(" 是一个错误规避或者是可选的的操作")]),o("li",null,[o("code",null,"//"),c(" 表示 Alternative operator, 可选操作符")])],-1),H=o("p",null,[o("code",null,"|(tonumber? // .)"),c(" 表示将 value 转换成数字，如果 value 转换失败了，则使用原来的 value。")],-1),K=o("p",null,"一个比较完整的且安全的函数，可以有如下的封装：",-1),M=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[o("span",{class:"token function-name function"},"assoc2json"),o("span",{class:"token punctuation"},"("),o("span",{class:"token punctuation"},")"),c(),o("span",{class:"token punctuation"},"{"),c("\n    "),o("span",{class:"token builtin class-name"},"declare"),c(" -n "),o("span",{class:"token assign-left variable"},"v"),o("span",{class:"token operator"},"="),o("span",{class:"token variable"},"$1"),c("\n    "),o("span",{class:"token builtin class-name"},"printf"),c(),o("span",{class:"token string"},[c("'%s"),o("span",{class:"token entity",title:"\\0"},"\\0"),c("'")]),c(),o("span",{class:"token string"},[c('"'),o("span",{class:"token variable"},[c("${"),o("span",{class:"token operator"},"!"),c("v"),o("span",{class:"token punctuation"},"["),c("@"),o("span",{class:"token punctuation"},"]"),c("}")]),c('"')]),c(),o("span",{class:"token string"},[c('"'),o("span",{class:"token variable"},[c("${v"),o("span",{class:"token punctuation"},"["),c("@"),o("span",{class:"token punctuation"},"]"),c("}")]),c('"')]),c(),o("span",{class:"token operator"},"|"),c("\n    jq -Rs "),o("span",{class:"token string"},[c("'split(\""),o("span",{class:"token entity",title:"\\u0000"},"\\u0000"),c('") | . as '),o("span",{class:"token variable"},"$v"),c(" | (length / 2) as "),o("span",{class:"token variable"},"$n"),c(" | reduce range("),o("span",{class:"token variable"},"$n"),c(") as "),o("span",{class:"token variable"},"$idx"),c(" ({}; .["),o("span",{class:"token variable"},"$v"),c("["),o("span",{class:"token variable"},"$idx"),c("]]="),o("span",{class:"token variable"},"$v"),c("["),o("span",{class:"token variable"},"$idx"),c("+"),o("span",{class:"token variable"},"$n"),c("])'")]),c("\n"),o("span",{class:"token punctuation"},"}"),c("\n\nassoc2json dict\n")])],-1),Q=o("h3",{id:"slurp"},[o("a",{class:"header-anchor",href:"#slurp","aria-hidden":"true"},"#"),c(" slurp")],-1),U=o("p",null,[c("如果是一个比较简单的场景，我们可以通过 "),o("code",null,"-s/--slurp"),c(" 来生成一个数组对象。比如：")],-1),W=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ "),o("span",{class:"token builtin class-name"},"echo"),c(),o("span",{class:"token number"},"1"),c(),o("span",{class:"token number"},"2"),c(),o("span",{class:"token number"},"3"),c(),o("span",{class:"token operator"},"|"),c(" jq -s \n"),o("span",{class:"token comment"},"#["),c("\n"),o("span",{class:"token comment"},"#  1,"),c("\n"),o("span",{class:"token comment"},"#  2,"),c("\n"),o("span",{class:"token comment"},"#  3"),c("\n"),o("span",{class:"token comment"},"#]"),c("\n")])],-1),Y=o("p",null,"或者搭配一些内置的函数使用：",-1),ss=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ "),o("span",{class:"token builtin class-name"},"echo"),c(),o("span",{class:"token number"},"1"),c(),o("span",{class:"token number"},"2"),c(),o("span",{class:"token number"},"3"),c(),o("span",{class:"token operator"},"|"),c(" jq -s "),o("span",{class:"token string"},"'add'"),c("\n"),o("span",{class:"token comment"},"# 6"),c("\n")])],-1),as=o("h3",{id:"reduce"},[o("a",{class:"header-anchor",href:"#reduce","aria-hidden":"true"},"#"),c(" reduce")],-1),ns=o("p",null,"reduce 在有大量数据输入时效率会优于 slurp 的方式。 这是一个非常高效的方式去做一些处理。",-1),es=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[o("span",{class:"token keyword"},"for"),c(),o("span",{class:"token variable"},[o("span",{class:"token punctuation"},"(("),c("i"),o("span",{class:"token operator"},"="),o("span",{class:"token number"},"0"),o("span",{class:"token punctuation"},";"),c(" i"),o("span",{class:"token operator"},"<"),o("span",{class:"token number"},"10"),o("span",{class:"token punctuation"},";"),c(" i"),o("span",{class:"token operator"},"++"),o("span",{class:"token punctuation"},"))")]),o("span",{class:"token punctuation"},";"),o("span",{class:"token keyword"},"do"),c("          \n"),o("span",{class:"token builtin class-name"},"echo"),c(),o("span",{class:"token variable"},"$i"),c(" \n"),o("span",{class:"token keyword"},"done"),c(),o("span",{class:"token operator"},"|"),c(" jq -n "),o("span",{class:"token string"},[c("'reduce inputs as "),o("span",{class:"token variable"},"$l"),c(" (0; . +("),o("span",{class:"token variable"},"$l"),c("))'")]),c("\n\n"),o("span",{class:"token comment"},"#45"),c("\n")])],-1),ts={expose:[],setup(c){const ts={title:"jq in action",date:"2022-05-11T00:00:00.000Z",author:"Linkang Chan",twitter:"JessEisen_LJ",description:"jq use with bash",public:!0,tag:"22J05 jq",meta:[{property:"og:title",content:"jq in action"},{property:"og:description",content:"jq use with bash"},{name:"description",content:"jq use with bash"}]};return n({title:"jq in action",meta:[{property:"og:title",content:"jq in action"},{property:"og:description",content:"jq use with bash"},{name:"description",content:"jq use with bash"}]}),(n,c)=>{const ls=s,os=a;return e(),t(os,{frontmatter:ts},{default:l((()=>[o("div",null,[p,r,i,u,k,b,h,d,g,m,v,j,y,f,q,$,w,x,_,o("ul",null,[o("li",null,[o(ls,{op:""},{default:l((()=>[S])),_:1})])]),I,o("ul",null,[o("li",null,[o(ls,{op:""},{default:l((()=>[J])),_:1})])]),T,F,O,R,A,C,E,L,N,z,P,V,X,Z,B,D,G,H,K,M,Q,U,W,Y,ss,as,ns,es])])),_:1})}}};export default ts;
