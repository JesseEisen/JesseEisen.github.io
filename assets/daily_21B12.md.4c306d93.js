import{l as e,f as a,A as s}from"./framework.ab59a038.js";const r='{"title":"21B12","description":"","frontmatter":{"title":"21B12","subtitle":"PostgreSQL In Action","date":"2021-01-25T00:00:00.000Z","category":"postgresql"},"headers":[{"level":2,"title":"创建用户","slug":"创建用户"},{"level":2,"title":"登录数据库","slug":"登录数据库"},{"level":2,"title":"导入导出","slug":"导入导出"}],"relativePath":"daily/21B12.md","lastUpdated":1613876526978}',t={},l=s('<p><div class="table-of-contents"><ul><li><a href="#创建用户">创建用户</a></li><li><a href="#登录数据库">登录数据库</a></li><li><a href="#导入导出">导入导出</a></li></ul></div></p><hr><p>postgresql 是一款开源的对象关系数据库管理系统。pg 可以说是一款全栈的数据库，毕竟 slogan 是 “世界上最先进的关系型数据库”。同时 pg 比 mysql 少不少的坑，使用上会舒心一些。 本文主要是记录 pg 的使用方式，同时也会记录一些 sql 的语句或者 pg 独有的一些操作。</p><h2 id="创建用户"><a class="header-anchor" href="#创建用户" aria-hidden="true">#</a> 创建用户</h2><p>pg 安装后默认会有一个 <code>postgres</code> 的用户，要创建新用户，需要先切换到该账户，然后执行如下的操作。</p><div class="language-"><pre><code>$ su - postgres\n-bash-4.2$ psql\npostgre=# create user username with password &#39;xxxxx&#39;;\npostgre=# create database databaseName owner username;\npostgre=# grant all privileges on database databaseName to username;\n</code></pre></div><h2 id="登录数据库"><a class="header-anchor" href="#登录数据库" aria-hidden="true">#</a> 登录数据库</h2><p>使用用户名密码登录：</p><div class="language-"><pre><code>$ psql -h hosturl -U username -d databasename -p port\n</code></pre></div><p><strong>注意</strong> 在一些编程的库中使用上面的方式可能会报 <code>sslmode required not support</code> 。通过增加 <code>sslmode=disable</code> 可以解决。</p><h2 id="导入导出"><a class="header-anchor" href="#导入导出" aria-hidden="true">#</a> 导入导出</h2><p>可以通过一些外部命令将 pg 数据库中的内容导出到一个 sql 文件中，同时也可以将这个 sql 文件重新应用到另外的数据库中。操作如下：</p><div class="language-"><pre><code># export to dump.sql\n$ pg_dump -h hosturl -U username databasename &gt; /path/tp/save/dump.sql\n\n# import to new database \n$ psql -h hosturl -d database -U username -f dump.sql\n</code></pre></div>',13);t.render=function(s,r,t,d,o,p){return e(),a("div",null,[l])};export default t;export{r as __pageData};
