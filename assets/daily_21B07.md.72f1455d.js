import{l as n,f as a,A as s}from"./framework.ab59a038.js";const t='{"title":"21B07","description":"","frontmatter":{"title":"21B07","subtitle":"python hard way","category":"python","date":"2021-01-21T00:00:00.000Z"},"headers":[{"level":2,"title":"command line argument parse","slug":"command-line-argument-parse"},{"level":2,"title":"Progess Bar","slug":"progess-bar"}],"relativePath":"daily/21B07.md","lastUpdated":1611292320847}',p={},e=s('<p><div class="table-of-contents"><ul><li><a href="#command-line-argument-parse">command line argument parse</a></li><li><a href="#progess-bar">Progess Bar</a></li></ul></div></p><hr><h2 id="command-line-argument-parse"><a class="header-anchor" href="#command-line-argument-parse" aria-hidden="true">#</a> command line argument parse</h2><p>使用 [<a href="https://click.palletsprojects.com/en/7.x/" target="_blank" rel="noopener noreferrer">click</a>] 作为解析库，可以方便的实现子命令操作。整理一些使用中遇到的问题。</p><ul><li>对 argument 进行注释</li></ul><p>使用多行注释的方式 <code>&quot;&quot;&quot; xxx &quot;&quot;&quot;</code>。但是 click 默认是现在在统一行，去除掉了换行的操作。所以在有多参数的情况下显示比较乱。解决方式是：</p><div class="language-"><pre><code>@click.command()\n@click.argument(&#39;gt&#39;, type=click.Path(exists=True))\n@click.argument(&#39;prefix&#39;, type=click.Path(exists=True))\ndef execute(gt, prefix):\n    &quot;&quot;&quot;\n       \\b \n       explain the command usage\n       gt: xxxx\n       prefix: xxxxx\n    &quot;&quot;&quot;\n</code></pre></div><h2 id="progess-bar"><a class="header-anchor" href="#progess-bar" aria-hidden="true">#</a> Progess Bar</h2><p>使用 <a href="https://tqdm.github.io/docs/cli/" target="_blank" rel="noopener noreferrer">tqdm</a> 搭配各种场景使用，比如在 requests 中显示现在的进度时，可以有如下的方式：</p><div class="language-python"><pre><code>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> stream<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token comment"># status code check </span>\npath <span class="token operator">=</span> pathlib<span class="token punctuation">.</span>Path<span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">.</span>expanduser<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>resolve<span class="token punctuation">(</span><span class="token punctuation">)</span>\npath<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>parents<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>\n\ndesc <span class="token operator">=</span> filename<span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">)</span> <span class="token comment"># 22 is the lenght bigger than filename, should change</span>\nr<span class="token punctuation">.</span>raw<span class="token punctuation">.</span>read <span class="token operator">=</span> functools<span class="token punctuation">.</span>partial<span class="token punctuation">(</span>r<span class="token punctuation">.</span>raw<span class="token punctuation">.</span>read<span class="token punctuation">,</span> decode_content<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment"># Decompress if needed</span>\n<span class="token keyword">with</span> tqdm<span class="token punctuation">.</span>tqdm<span class="token punctuation">.</span>wrapattr<span class="token punctuation">(</span>r<span class="token punctuation">.</span>raw<span class="token punctuation">,</span> <span class="token string">&quot;read&quot;</span><span class="token punctuation">,</span> total<span class="token operator">=</span>file_size<span class="token punctuation">,</span> desc<span class="token operator">=</span>desc<span class="token punctuation">)</span> <span class="token keyword">as</span> r_raw<span class="token punctuation">:</span>\n     <span class="token keyword">with</span> path<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;wb&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>\n            shutil<span class="token punctuation">.</span>copyfileobj<span class="token punctuation">(</span>r_raw<span class="token punctuation">,</span> f<span class="token punctuation">)</span>\n</code></pre></div>',10);p.render=function(s,t,p,o,c,u){return n(),a("div",null,[e])};export default p;export{t as __pageData};
