import{_ as e}from"./ShortHR.090ec3c7.js";import{_ as a}from"./LinkItem.65bc6d8d.js";import{_ as l}from"./app.252c1e4c.js";import{h as s,o as n,a as t,w as r,b as o,k as c}from"./vendor.80607e96.js";const u=o("p",null,[o("div",{class:"table-of-contents"},[o("ul",null,[o("li",null,[o("a",{href:"#debug-related"}," Debug Related")]),o("li",null,[o("a",{href:"#host"}," HOST")]),o("li",null,[o("a",{href:"#proxy"}," Proxy")]),o("li",null,[o("a",{href:"#username-and-password"}," Username and password")]),o("li",null,[o("a",{href:"#fetch-page"}," Fetch page")]),o("li",null,[o("a",{href:"#多个-url-同时请求"}," 多个 URL 同时请求")]),o("li",null,[o("a",{href:"#html-forms"}," HTML Forms"),o("ul",null,[o("li",null,[o("a",{href:"#get"}," GET")]),o("li",null,[o("a",{href:"#post"}," POST")]),o("li",null,[o("a",{href:"#文件上传"}," 文件上传")]),o("li",null,[o("a",{href:"#location"}," Location")])])]),o("li",null,[o("a",{href:"#cookies"}," Cookies")]),o("li",null,[o("a",{href:"#https"}," HTTPS")]),o("li",null,[o("a",{href:"#自定义"}," 自定义")]),o("li",null,[o("a",{href:"#一些技巧和选项"}," 一些技巧和选项")])])])],-1),i=o("p",null,"本文用来记录一些 Curl 日常使用中的技巧和注意点，虽然现在大部分的调试软件或者工具提供了自动生成的代码的功能，但是在服务器上操作时，可以熟练掌握这些技巧可以快速的提高我们的工作效率。",-1),h=o("h2",{id:"debug-related"},[o("a",{class:"header-anchor",href:"#debug-related","aria-hidden":"true"},"#"),c(" Debug Related")],-1),p=o("ul",null,[o("li",null,[o("strong",null,"-v/–trace/–trace-ascii")])],-1),d=o("p",null,"可以用来展示请求的 protocol 和具体的请求和回复的内容",-1),g=o("ul",null,[o("li",null,[o("strong",null,"–trace-time")])],-1),f=o("p",null,"从名字上便可以发现这个是用于统计请求的时间",-1),m=o("pre",{class:"language-shell"},[o("code",{class:"language-shell"},[c("$ "),o("span",{class:"token function"},"curl"),c(" --trace-ascii d.txt --trace-time http://example.com/\n")])],-1),b=o("h2",{id:"host"},[o("a",{class:"header-anchor",href:"#host","aria-hidden":"true"},"#"),c(" HOST")],-1),k=o("p",null,[c("通常我们在使用域名访问的时候，一般是通过 DNS 或者 "),o("code",null,"/etc/hosts"),c(" 文件中的定义自动解析的。当我们的域名还没有生效或者暂时未绑定对应服务器的 IP 时，可以通过 "),o("code",null,"--resolve"),c(" 选项来指定。")],-1),x=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ "),o("span",{class:"token function"},"curl"),c(" --resolve www.example.org:80:127.0.0.1 http://www.example.org/\n")])],-1),w=o("h2",{id:"proxy"},[o("a",{class:"header-anchor",href:"#proxy","aria-hidden":"true"},"#"),c(" Proxy")],-1),y=o("p",null,"可以在域名后面添加端口号，也可以使用通过 proxy 的方式来指定。",-1),T=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ "),o("span",{class:"token function"},"curl"),c(" --proxy http://proxy.example.org:4321 http://remote.example.org\n")])],-1),L=o("h2",{id:"username-and-password"},[o("a",{class:"header-anchor",href:"#username-and-password","aria-hidden":"true"},"#"),c(" Username and password")],-1),P=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ "),o("span",{class:"token function"},"curl"),c(" -u user:password http://example.org/\n")])],-1),S=o("h2",{id:"fetch-page"},[o("a",{class:"header-anchor",href:"#fetch-page","aria-hidden":"true"},"#"),c(" Fetch page")],-1),v=o("p",null,"正常情况下默认是 GET 的方式访问指定的目标网址，如果我们想看返回的目标地址的头部信息时，可以使用如下两个选项：",-1),C=o("ul",null,[o("li",null,[o("code",null,"-i"),c(" 连同 response 的 body 返回 header 相关的信息")]),o("li",null,[o("code",null,"-I"),c(" 只返回 header 相关的信息，方便用于调试")])],-1),R=o("h2",{id:"多个-url-同时请求"},[o("a",{class:"header-anchor",href:"#多个-url-同时请求","aria-hidden":"true"},"#"),c(" 多个 URL 同时请求")],-1),U=o("p",null,"curl 支持对具有相同请求参数的 URL 发起请求。比如：",-1),$=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ "),o("span",{class:"token function"},"bash"),c(" http://url1.xxx.com http://url2.xxx.com\n")])],-1),H=o("p",null,[c("很多时候我们通常会对同一个 url 按照不同的请求方法去发起请求。比如一般先 POST 请求，后面再进行 GET 请求。 此时我们可以使用 "),o("code",null,"--next"),c(" 的方式")],-1),O=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ "),o("span",{class:"token function"},"curl"),c(" -d "),o("span",{class:"token assign-left variable"},"score"),o("span",{class:"token operator"},"="),o("span",{class:"token number"},"10"),c(" http://example.com/post.cgi --next http://example.com/results.html\n")])],-1),j=o("h2",{id:"html-forms"},[o("a",{class:"header-anchor",href:"#html-forms","aria-hidden":"true"},"#"),c(" HTML Forms")],-1),_=o("blockquote",null,[o("p",null,"Forms are the general way a website can present an HTML page with fields for the user to enter data in, and then press some kind of ‘OK’ or ‘Submit’ button to get that data sent to the server. The server then typically uses the posted data to decide how to act. Like using the entered words to search in a database, or to add the info in a bug tracking system, display the entered address on a map or using the info as a login-prompt verifying that the user is allowed to see what it is about to see.")],-1),E=o("h3",{id:"get"},[o("a",{class:"header-anchor",href:"#get","aria-hidden":"true"},"#"),c(" GET")],-1),B=o("p",null,"这个方式比较简单，可以类似于 url 的 query 请求方式。因为 GET 的方式会将所有的参数体现在 URL 中",-1),F=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ "),o("span",{class:"token function"},"curl"),c(),o("span",{class:"token string"},'"http://www.example.com/when/junk/birthday=1905&press=OK"'),c("\n")])],-1),G=o("h3",{id:"post"},[o("a",{class:"header-anchor",href:"#post","aria-hidden":"true"},"#"),c(" POST")],-1),q=o("p",null,"使用 post 方法的 form data 请求方式有几个好处：",-1),D=o("ul",null,[o("li",null,"避免 URL 过长"),o("li",null,"避免一些敏感信息直接在 URL 中暴露"),o("li",null,"适用于需要传输较大内容或者无法阅读的 URL")],-1),I=o("p",null,[c("需要注意的是 curl 请求一般不会对内容进行编码，而 formdata 的方式需要发送的数据一定是经过编码的。如果我们单纯的使用 "),o("code",null,"--data"),c(" 来指定 formdata 参数时需要注意一些特殊符号的编码，比如空格需要改成 "),o("code",null,"%20"),c("。")],-1),J=o("blockquote",null,[o("p",null,"一般这种类型的 POST 请求的 Content-Type 需要指定为 application/x-www-form-urlencoded")],-1),K=o("p",null,[c("在较新的 curl 版本中，可以通过 "),o("code",null,"--data-urlencode"),c(" 的方式让 curl 帮助我们将编码完成。 当我们重复使用 "),o("code",null,"--data"),c(" 选项时，curl 会自动将其使用 "),o("code",null,"&"),c(" 符号将其合并起来。这一点方便在写脚本时的可阅读性。")],-1),M=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ "),o("span",{class:"token function"},"curl"),c(" --data-urlencode "),o("span",{class:"token string"},'"name=I am Jesse"'),c(" http://www.example.com\n")])],-1),N=o("h3",{id:"文件上传"},[o("a",{class:"header-anchor",href:"#文件上传","aria-hidden":"true"},"#"),c(" 文件上传")],-1),W=o("p",null,[c("当请求需要的是上传文件时，我们一般指定 "),o("code",null,"Content-type: multipart/form-data"),c("。 不过在使用 curl 请求的时候，我们可以之间的通过如下的方式操作即可，相关的请求头 curl 会帮我们设置。")],-1),X=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ "),o("span",{class:"token function"},"curl"),c(" --form "),o("span",{class:"token assign-left variable"},"upload"),o("span",{class:"token operator"},"="),c("@localfilename --form "),o("span",{class:"token assign-left variable"},"press"),o("span",{class:"token operator"},"="),c("OK "),o("span",{class:"token punctuation"},"["),c("URL"),o("span",{class:"token punctuation"},"]"),c("\n")])],-1),Z=o("p",null,"这种方式可以比较方便的将本地文件直接作为 form data 的请求的一部分。",-1),z=o("p",null,[c("其实如果请求支持 "),o("code",null,"PUT"),c(" 方法的话，此时可以使用 "),o("code",null,"--upload-file"),c(" 的方式来上传。")],-1),A=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ "),o("span",{class:"token function"},"curl"),c(" --upload-file uploadfile http://www.example.com/upload\n")])],-1),Q=o("h3",{id:"location"},[o("a",{class:"header-anchor",href:"#location","aria-hidden":"true"},"#"),c(" Location")],-1),V=o("p",null,[c("一般 location 选项用于返回值的重定向。所以如果目标 URL 返回的是其他的地址时，可以增加这个选项 "),o("code",null,"--location"),c("。")],-1),Y=o("h2",{id:"cookies"},[o("a",{class:"header-anchor",href:"#cookies","aria-hidden":"true"},"#"),c(" Cookies")],-1),ee=o("p",null,[c("一般的方式是使用 "),o("code",null,"--dump-header"),c(" 存储 cookie，后续使用 "),o("code",null,"--cookie xxx_file"),c(" 使用储存的 cookie。")],-1),ae=o("p",null,[c("也可以使用 "),o("code",null,"--cookie-jar"),c(" 的方式来更新 cookie 文件.")],-1),le=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ "),o("span",{class:"token function"},"curl"),c(" --cookie cookies.txt --cookie-jar newcookies.txt http://example.com\n")])],-1),se=o("h2",{id:"https"},[o("a",{class:"header-anchor",href:"#https","aria-hidden":"true"},"#"),c(" HTTPS")],-1),ne=o("p",null,[c("可以使用 "),o("code",null,"--cert"),c(" 来指定证书。")],-1),te=o("pre",{class:"language-bash"},[o("code",{class:"language-bash"},[c("$ "),o("span",{class:"token function"},"curl"),c(" --cert mycert.pem https://secure.example.com\n")])],-1),re=o("h2",{id:"自定义"},[o("a",{class:"header-anchor",href:"#自定义","aria-hidden":"true"},"#"),c(" 自定义")],-1),oe=o("p",null,[c("可以使用 "),o("code",null,"--headers"),c(" 来自定义一些请求头。 "),o("code",null,"--request/-X"),c(" 来指定请求方法。")],-1),ce=c(" Curl 文档 "),ue=o("h2",{id:"一些技巧和选项"},[o("a",{class:"header-anchor",href:"#一些技巧和选项","aria-hidden":"true"},"#"),c(" 一些技巧和选项")],-1),ie=o("p",null,[c("When using Curl in shell scripts, always pass "),o("code",null,"-fsSL"),c(", which:")],-1),he=o("ul",null,[o("li",null,"Treats non-2xx/3xx responses as errors (-f)."),o("li",null,"Disables the progress meter (-sS)."),o("li",null,"Handles HTTP redirects (-L).")],-1),pe={expose:[],setup(c){const pe={title:"Curl Best Practise",date:"2023-01-23T00:00:00.000Z",author:"Linkang Chan",twitter:"JessEisen_LJ",description:"collection of curl best pracitse",public:!0,tag:"23B10 curl",meta:[{property:"og:title",content:"Curl Best Practise"},{property:"og:description",content:"collection of curl best pracitse"},{name:"description",content:"collection of curl best pracitse"}]};return s({title:"Curl Best Practise",meta:[{property:"og:title",content:"Curl Best Practise"},{property:"og:description",content:"collection of curl best pracitse"},{name:"description",content:"collection of curl best pracitse"}]}),(s,c)=>{const de=e,ge=a,fe=l;return n(),t(fe,{frontmatter:pe},{default:r((()=>[o("div",null,[u,i,h,p,d,g,f,m,o(de),b,k,x,w,y,T,L,P,S,v,C,R,U,$,H,O,o(de),j,_,E,B,F,G,q,D,I,J,K,M,N,W,X,Z,z,A,Q,V,o(de),Y,ee,ae,le,o(de),se,ne,te,o(de),re,oe,o("p",null,[o(ge,{text:"curl documentation",url:"https://curl.se/docs/httpscripting.html"},{default:r((()=>[ce])),_:1})]),o(de),ue,ie,he])])),_:1})}}};export default pe;
