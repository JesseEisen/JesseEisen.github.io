import{l as e,f as t,A as r}from"./framework.ab59a038.js";const l='{"title":"20X11","description":"","frontmatter":{"title":"20X11","subtitle":"Html Make Fun","date":"2020-11-29T00:00:00.000Z","category":"html"},"headers":[{"level":2,"title":"progress bar","slug":"progress-bar"},{"level":2,"title":"ruby","slug":"ruby"}],"relativePath":"daily/20X11.md","lastUpdated":1612680310407}',a={},o=r('<p><div class="table-of-contents"><ul><li><a href="#progress-bar">progress bar</a></li><li><a href="#ruby">ruby</a></li></ul></div></p><hr><p><i class="releated">incoming(1):</i> {<a href="/daily/21B06.html">css</a>}</p><p>单纯的 HTML 标记似乎在无法表达更多的样式，但是往往也会有一个令人惊奇的东西存在。这篇文章主要用来记录下这些内容。</p><h2 id="progress-bar"><a class="header-anchor" href="#progress-bar" aria-hidden="true">#</a> progress bar</h2><p><code>&lt;meter&gt;</code> 是一个原生的标签用来表示已知范围的标量或者分数值。近似的我们可以用这个来表示一个进度条的样式：</p><p><label for="fuel">Fuel level:</label><meter id="fuel" min="0" max="100" low="33" high="66" optimum="80" value="50"> at 50/100 </meter></p><div class="language-"><pre><code>&lt;label for=&quot;fuel&quot;&gt;Fuel level:&lt;/label&gt;\n\n&lt;meter id=&quot;fuel&quot;\n       min=&quot;0&quot; max=&quot;100&quot;\n       low=&quot;33&quot; high=&quot;66&quot; optimum=&quot;80&quot;\n       value=&quot;50&quot;&gt;\n    at 50/100\n&lt;/meter&gt;\n</code></pre></div><p>目前大部分浏览器都支持这个，除了IE。这个标签的所有属性都在上面的例子中了，这些参数会把区间分为 <code>[min, low]</code> 和 <code>[high, max]</code> 这两个。 value 在这两个区间的某个一个里面时呈现出不同的外貌样式。 同时 <code>optimun</code> 的值在哪个区间内，那个区间会被认为是更佳的取值范围。</p><h2 id="ruby"><a class="header-anchor" href="#ruby" aria-hidden="true">#</a> ruby</h2><p>ruby 标签在 HTML 中用于东亚字符的注音使用，形式类似于 <ruby>汉<rp>(</rp><rt>han</rt><rp>)</rp></ruby> 这样的形式。基本的语法如下：</p><div class="language-"><pre><code>&lt;ruby&gt;汉&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;han&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;\n</code></pre></div><p>其中<code>rp</code> 是用于在不支持 ruby 标签的情况下使用包裹的字符去替代，上面例子是括号。 <code>rt</code> 中间的内容是注音的具体内容。</p>',13);a.render=function(r,l,a,u,d,i){return e(),t("div",null,[o])};export default a;export{l as __pageData};
