import{l as t,f as e,g as l}from"./framework.ab59a038.js";const r='{"title":"Structured & Centralized Log","description":"","frontmatter":{"title":"Structured & Centralized Log","date":"2020-02-26T00:00:00.000Z","author":"Chan"},"relativePath":"posts/20E01.md","lastUpdated":1611543034166}',a={},o=l("p",null,"在日常开发的过程中，给程序加上 log 是必不可少的，在写 C++ 时，采用的 glog 这种 level 型日志库。这种风格几乎是目前大部分的日志都会采用的方式，根据日志等级来输出日志。如果需要更加定制化的查看日志，往往需要单独去写一些解析的工具来统一查看。不然就是一种原始的 grep 过程了。",-1),n=l("p",null,"结构化日志是一种对程序员友好，风格一致且易于扩展的日志形式。可以被分发到不同的日志处理工具上进行分析处理，更好的被搜索和统计。这对日常开发的调试以及常规的定位问题会有很大的帮助。",-1),d=l("p",null,"结构化日志比较常见的形式是通过 JSON 的格式输出，这听起来就很简单，并不是什么特别玄乎的事情。在这个结构中同样可以做到 level 划分，按使用场景类别，日期等等。而这些日志并不会直接在应用程序里面进行解析，而是会发送到一个或者是一组集中式的日志处理工具中进行更深的定制化处理。",-1);a.render=function(l,r,a,u,i,p){return t(),e("div",null,[o,n,d])};export default a;export{r as __pageData};
